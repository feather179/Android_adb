# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Android-adb

on:
  workflow_dispatch:
  # push:
  #   branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
          submodules: recursive

    - uses: actions/setup-java@v4
      with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'

    # - uses: ashutoshvarma/setup-ninja@master
    #   with:
    #       # ninja version to download. Default: 1.10.0
    #       version: 1.10.0
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -DANDROID_NDK_ROOT="$env:ANDROID_NDK_ROOT" -DANDROID_SDK_ROOT="$env:ANDROID_SDK_ROOT" -Dprotobuf_BUILD_TESTS=OFF -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{github.workspace}}
      shell: powershell

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      shell: powershell

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}

    - name: Get current date
      # Build your program with the given configuration
      # run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      run: |
        $currentDate = Get-Date -Format 'yyyy-MM-dd'
        echo "CURRENT_DATE=$currentDate" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        Write-Host "Current date is: $currentDate"
      shell: powershell

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.CURRENT_DATE }}
        files: ${{github.workspace}}/build/adb/adb
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        

